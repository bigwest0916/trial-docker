categories = CategoryMaster.objects.filter(questionversionmaster__id=2)
cm = []
for category in categories:
	qms = category.questionmaster_set.filter(categorymaster=category)
	qm = []
	for q in qms:
		qm.append({'q': q, 'r': q.registresult_set.get(diagnosismaster=1)},)
	cm.append({'category': category, 'qm': qm},)

for i in cm:
    i['category']
    i['qm']
    for n in i['qm']:
        n
        n['q']
        n['r']



cm=[]

>>> for category in categories:
...   qms=category.questionmaster_set.filter(categorymaster=category)
...   qm=[]
...   for q in qms:
...     qm.append({'q':q,'r':q.registresult_set.get(diagnosismaster=1)},)
...   cm.append({'category':category,'qm':qm})
...
>>>
>>> for i in cm:
...     i['category']
...     for q in i['qm']:
...             q['q'].answer_values
...             q['r'].answer
...
<CategoryMaster: QV２−カテゴリ１>
''
'aaaa'
'日本,アメリカ,イギリス,フランス,イタリア'
'アメリカ'
<CategoryMaster: QV２−カテゴリ２>
'りんご,オレンジ,パイナップル,キウィ'
'りんご'
'伊藤,山県,安倍,吉田'
'伊藤'
>>>





=--------------------------------------------


>>> categories
[{'category': <CategoryMaster: QV２−カテゴリ１>, 'rr': <QuerySet [<RegistResult: RegistResult object (24)>, <RegistResult: RegistResult object (25)>]>}, {'category': <CategoryMaster: QV２−カテゴリ２>, 'rr': <QuerySet [<RegistResult: RegistResult object (26)>, <RegistResult: RegistResult object (27)>]>}]
>>>
>>>
>>> type(categories[0])
<class 'dict'>
>>> categories[0]["category"]
<CategoryMaster: QV２−カテゴリ１>
>>> categories[0]["rr"]
<QuerySet [<RegistResult: RegistResult object (24)>, <RegistResult: RegistResult object (25)>]>
>>>




-----------------------------------

>>> categories = CategoryMaster.objects.filter(questionversionmaster__id=2)
>>>
>>>
>>>
>>> categories
<QuerySet [<CategoryMaster: QV２−カテゴリ１>, <CategoryMaster: QV２−カテゴリ２>]>
>>>
>>>
>>>
>>> categories[0]
<CategoryMaster: QV２−カテゴリ１>
>>>
>>>
>>>
>>> categories[0].questionmaster_set.all()
<QuerySet [<QuestionMaster: QuestionMaster object (5)>, <QuestionMaster: QuestionMaster object (6)>]>
>>>
>>>
>>> categories[0].questionmaster_set.all()[0].registresult_set.all()
<QuerySet [<RegistResult: RegistResult object (18)>]>
>>>
>>> categories[0].questionmaster_set.all()[0].registresult_set.filter(diagnosismaster=1)
<QuerySet [<RegistResult: RegistResult object (18)>]>
>>>
>>>
>>> categories[0].questionmaster_set.all()[0].registresult_set.get(diagnosismaster=1)
<RegistResult: RegistResult object (18)>
>>>

   {% for category in categories %}
    <fieldset>
        {{category.category_name}}<br>
        {{category.category_desc}}<br>

        {% for q in category.questionmaster_set.all %}
            質問内容{{q.question_content}}
                    {% if q.form_type == 2 %}
                {%for av in q.answer_values_as_list %}
                   <input type="checkbox" name="{{q.id}}" value="{{av}}"
                          {% if av in q.answer%}
                            checked
                          {% endif %}
                   >{{av}}</label>
                {% endfor %}
            {% endif%}
        {% endfor %}


category=[]
questionmaster=[]
registresult=[]

categories = CategoryMaster.objects.filter(questionversionmaster__id=2)
for cm in categories:
    category.append()
    for qm in cm.questionmaster_set.all()
        qm




'''
######
# 特定の診断の回答を取得
>>> rr = RegistResult.objects.filter(diagnosismaster=1)
>>> rr
<QuerySet [<RegistResult: RegistResult object (5)>, <RegistResult: RegistResult object (6)>, <RegistResult: RegistResult object (7)>, <RegistResult: RegistResult object (8)>]>

# 特定の診断の回答の、カテゴリのグループを取得
>>> rr.values('categorymaster').annotate(max=Max('categorymaster'))
<QuerySet [{'categorymaster': 3, 'sum': 3}, {'categorymaster': 4, 'sum': 4}]>

>>> qs = rr.values('categorymaster').annotate(sum=Max('categorymaster'))
>>> 
>>> qs
<QuerySet [{'categorymaster': 3, 'sum': 3}, {'categorymaster': 4, 'sum': 4}]>

# 特定カテゴリのカテゴリIDを取得
>>> for q in qs:
...     print(q['categorymaster'])
... 
3
4
>>>

#　特定カテゴリ配下の質問回答を取得
>>> rr.filter(categorymaster=3)
<QuerySet [<RegistResult: RegistResult object (5)>, <RegistResult: RegistResult object (6)>]>
>>> rr.filter(categorymaster=3)
<QuerySet [<RegistResult: RegistResult object (5)>, <RegistResult: RegistResult object (6)>]>
>>> 

######


①特定診断の回答を取得
②その回答から、カテゴリグループを取得
③カテゴリグループごとに、質問回答をforで回す



rr = RegistResult.objects.filter(diagnosismaster=1)
grp = rr.values('categorymaster').annotate(max=Max('categorymaster'))

c_ids=[]
for g in grp:
    c_ids.append(g['categorymaster'])

categories=[]
for c_id in c_ids:
    categories.append({'category':CategoryMaster.objects.get(pk=c_id),'rr':rr.filter(categorymaster=c_id)})
